{"version":3,"sources":["components/tiles/tile.js","components/tiles/go.js","components/tiles/property.js","components/tiles/jail.js","components/tiles/free_parking.js","components/tiles/tax.js","components/tiles/chance.js","components/tiles/go_to_jail.js","components/hand/hand.jsx","components/game/trade.jsx","components/game/mortgage.jsx","components/game/interface.jsx","components/board/leaderboard.jsx","components/modal/end.jsx","components/modal/modal.jsx","components/board/board.jsx","components/game/game.jsx","components/player/player.js","components/startMenu/start_menu.jsx","App.js","serviceWorker.js","index.js"],"names":["Tile","index","name","this","Go","Property","color","price","rent","home","buildings","owner","monopoly","mortgaged","buildingPrice","houses","zoom","player","payRent","cash","rentAmount","Jail","FreeParking","Tax","Chance","GoToJail","position","jailed","Hand","props","properties","setMessage","tiles","setTiles","propObj","forEach","tile","i","push","tileArr","length","getMonopoly","loseMonopoly","sellHome","property","sell","tilesArr","propObjValues","Object","values","stackStyle","margin","hand","map","stack","idx","max","Math","even","every","stackArr","key","className","style","backgroundColor","buildingArr","onClick","build","displayBuildings","textAlign","Trade","useState","tradePartner","setTradePartner","trade1","setTrade1","trade2","setTrade2","tradeCash1","setTradeCash1","tradeCash2","setTradeCash2","players","setAction","displayPiece","useEffect","addToTrade","includes","temp","splice","indexOf","displayProperties","propertiesStack","sort","a","b","styleObj","border","split","el","slice","join","result","displayTradepartners","type","value","min","onChange","e","target","Number","loseProperty","gainProperty","mortgageProperty","setMortgageProperty","buySell","setBuySell","unmortgaged","floor","getMortgageMoney","filter","func","askToMortgage","Interface","message","message2","setMessage2","action","moved","setMoved","setTile","nextPlayer","roll","setRoll","setPlayers","moveToJail","setActivePlayer","setModal","turnsJailed","turns","move","die1","die2","tileName","doubles","landed","endTurn","payFine","getOutOfJail","rollForJail","rollDice","purchase","declareBankruptcy","reset","setDie","die","toolbar","mortgageBtn","tradeBtn","displayToolbar","displayRoll","component","displayAction","Leaderboard","playerObj","setPlayerObj","obj","netWorth","housesCount","reduce","acc","End","Modal","modal","stopPropagation","Board","displayTile","setDisplayTile","pos","setPos","activePlayer","start","handleTileHover","x","clientX","y","clientY","screenWidth","window","innerWidth","screenHeight","innerHeight","displayTileWidth","scrollY","figure","mini","addClass","piece","board","tileObj","playerArr","backgroundImage","onMouseMove","onMouseLeave","displayHouses","sendToJail","reverse","left","top","Game","onbeforeunload","Player","buy","random","StartMenu","setStart","setName","pieces","setPieces","character","setCharacter","createPlayer","preventDefault","toUpperCase","pieceArr","onSubmit","currentTarget","displayPieces","disabled","toLowerCase","menu","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c83f424.chunk.js","sourcesContent":["export default class Tile {\n  constructor(index, name) {\n    this.name = name;\n    this.index = index\n  }\n\n  landed() {\n    return;\n  }\n}","import Tile from \"./tile\";\n\nexport default class Go extends Tile {\n  // constructor(index, name) {\n  //   super(index, name);\n  // }\n}","import Tile from './tile';\n\nexport default class Property extends Tile {\n  constructor(index, name, color, price, rent) {\n    super(index, name);\n    this.color = color;\n    this.price = price;\n    this.rent = rent;\n    this.buildings = 0;\n    this.owner = null;\n    this.monopoly = false;\n    this.mortgaged = false;\n\n    let home; \n    switch (this.color) {\n      case 'Brown':\n      case 'LightBlue':\n        home = 50;\n        break;\n      case 'Pink':\n      case 'Orange':\n        home = 100;\n        break;\n      case 'Red':\n      case 'Yellow':\n        home = 150;\n        break;\n      case 'Green':\n      case 'SteelBlue':\n        home = 200;\n        break;\n      default:\n        break;\n    }\n    this.buildingPrice = home;\n  }\n\n  reset() {\n    this.owner = null;\n    this.monopoly = false;\n    this.mortgaged = false;\n    this.buildings = 0;\n  }\n\n  getMonopoly() {\n    this.monopoly = true;\n  }\n  \n  loseMonopoly() {\n    this.monopoly = false;\n  }\n\n  rentAmount(houses = this.buildings, zoom = false) {\n    if (this.monopoly && this.buildings === 0 && !zoom) return this.rent * 2;\n  \n    switch (houses) {\n      case 0:\n        return this.rent;\n      case 1:\n        return this.rent * 5;\n      case 2:\n        return this.rent * 15;\n      case 3:\n        return this.rent * 30;\n      case 4:\n        return this.rent * 45;\n      default:\n        break;\n    }\n  }\n\n  buy(player) {\n    this.owner = player;\n  }\n\n  landed(player) {\n    if (this.owner) {\n      this.payRent(player);\n    }\n  }\n\n  payRent(player) {\n    player.cash -= this.rentAmount();\n    this.owner.cash += this.rentAmount();\n  }\n\n  build() {\n    this.owner.cash -= this.buildingPrice;\n    this.buildings += 1;\n  }\n\n  sell() {\n    this.owner.cash += this.buildingPrice / 2;\n    this.buildings -= 1;\n  }\n}","import Tile from \"./tile\";\n\nexport default class Jail extends Tile {\n    // constructor(index, name) {\n    //     super(index, name);\n    // }\n}","import Tile from \"./tile\";\n\nexport default class FreeParking extends Tile {\n    // constructor(index, name) {\n    //     super(index, name);\n    // }\n}","import Tile from \"./tile\";\n\nexport default class Tax extends Tile {\n\n  landed(player) {\n    player.cash -= 200;\n  }\n}","import Tile from \"./tile\";\n\nexport default class Chance extends Tile {\n  // constructor(index, name) {\n  //   super(index, name);\n  // }\n\n  landed(player) {\n    player.cash += 200;\n  }\n}","import Tile from \"./tile\";\n\nexport default class GoToJail extends Tile {\n    // constructor(index, name) {\n    //     super(index, name);\n    // }\n\n    landed(player) {\n        player.position = 19;\n        player.jailed = true;\n    }\n}","import React from 'react';\n\nexport default function Hand(props) {\n    const { properties, setMessage, tiles, setTiles, player } = props;\n\n    let propObj = {};\n    properties.forEach((tile, i) => {\n        if (propObj[tile.color]) {\n            propObj[tile.color].push(tile);\n        } else {\n            propObj[tile.color] = [tile];\n        }\n    });\n\n    for (let color in propObj) {\n        let tileArr = propObj[color];\n        if (color === 'SteelBlue' || color === 'Brown') {\n            if (tileArr[0].monopoly === false && tileArr.length === 2) {\n                tileArr.forEach(tile => tile.getMonopoly())\n            }\n            if (tileArr[0].monopoly === true && tileArr.length !== 2) {\n                tileArr.forEach(tile => tile.loseMonopoly())\n            }\n        } else {\n            if (tileArr[0].monopoly === false && tileArr.length === 3) {\n                tileArr.forEach(tile => tile.getMonopoly());\n            }\n            if (tileArr[0].monopoly === true && tileArr.length !== 3) {\n                tileArr.forEach(tile => tile.loseMonopoly())\n            }\n        }\n    }\n\n    const buildHome = (property) => {\n        return () => {\n            if (player.cash >= property.buildingPrice) {\n                property.build();\n                setMessage(`${player.name} built a house on ${property.name}`);\n                let tilesArr = [...tiles];\n                tilesArr[property.index].tile = property;\n                setTiles(tilesArr);\n            } else {\n                setMessage(`${player.name} doesn't have enough money to build on ${property.name}`)\n            }\n        }\n    }\n\n    const sellHome = (property) => {\n        return () => {\n                property.sell();\n                setMessage(`${player.name} sold a house on ${property.name}`);\n                let tilesArr = [...tiles];\n                tilesArr[property.index].tile = property;\n                setTiles(tilesArr);\n        }\n    }\n\n    const displayBuildings = (tile, max, even) => {\n        let buildingArr = [];\n        if (tile.monopoly && !tile.mortgaged) {\n            for (let i = 0; i < tile.buildings; i++) {\n                buildingArr.push(<i key={i} className=\"fas fa-home\" onClick={sellHome(tile)}></i>)\n            }\n            if (tile.buildings < 4){\n                if (tile.buildings !== max || even) buildingArr.push(<i key={4} className=\"fas fa-home buy\" onClick={buildHome(tile)}></i>)\n            }\n            return <div className=\"tile-buildings\">{buildingArr}</div>\n        }\n    }\n\n    const displayMortgaged = (property) => {\n        if (!property.mortgaged) return null;\n\n        return <div className='mortgage-sign'>MORTGAGED</div>\n    }\n\n    let propObjValues = Object.values(propObj);\n\n    let stackStyle = propObjValues.length < 8 ? {margin: '5px'} : null;\n\n    const hand = propObjValues.map((stack, idx) => {\n        const max = Math.max(...stack.map(property => property.buildings));\n        const even = stack.every(property => property.buildings === stack[0].buildings)\n        const stackArr = stack.map((tile, i) => {\n            return <div key={i} className=\"tile\">\n                        <header className=\"tile-header\" style={{ backgroundColor: tile.color }}>{tile.name}</header>\n                        <div className=\"tile-info\">\n                            <div>Price:${tile.price}</div>\n                            <div>Rent: ${tile.rentAmount()}</div>\n                            <div>House Cost: ${tile.buildingPrice}</div>\n                        </div>\n                        {displayBuildings(tile, max, even)}\n                        {displayMortgaged(tile)}\n                   </div>\n        })\n        return (\n            <div key={idx} style={stackStyle} className=\"hand-stack\">\n                {stackArr}\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"hand-container\">\n            <div style={{textAlign: \"center\"}}>\n                Properties Owned:\n            </div>\n            <div className=\"hand\">\n                {hand}\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nexport default function Trade(props) {\n    const [tradePartner, setTradePartner] = useState();\n    const [trade1, setTrade1] = useState([]);\n    const [trade2, setTrade2] = useState([]);\n    const [tradeCash1, setTradeCash1] = useState(0);\n    const [tradeCash2, setTradeCash2] = useState(0);\n    \n    const { players, player, setAction, tiles, setTiles, displayPiece } = props;\n\n    useEffect(() => {\n        setTrade2([]);\n        setTrade1([]);\n        setTradeCash1(0);\n        setTradeCash2(0);\n    }, [tradePartner])\n\n    const displayTradepartners = () => {\n        let result = [];\n        let name = player.name;\n        \n        players.forEach((player, i) => {\n            if (name !== player.name) {\n                result.push(\n            <button key={i} onClick={() => setTradePartner(player)}>{player.name}{displayPiece(player)}</button>\n                )\n            }\n        })\n\n        return <div>{result}</div>;\n    }\n\n    const addToTrade = (tile, player) => {\n        return () => {\n            if (player.name === tradePartner.name) {\n                if (trade2.includes(tile)) {\n                    let temp = [...trade2];\n                    temp.splice(trade2.indexOf(tile), 1);\n                    setTrade2(temp);\n                } else {\n                    setTrade2([...trade2, tile]);\n                }\n            } else {\n                if (trade1.includes(tile)) {\n                    let temp = [...trade1];\n                    temp.splice(trade1.indexOf(tile), 1);\n                    setTrade1(temp);\n                } else {\n                    setTrade1([...trade1, tile]);\n                }\n            }\n        }\n    }\n\n    const acceptTrade = () => {\n        let tilesArr = [...tiles];\n\n        player.cash -= tradeCash1;\n        player.cash += Number(tradeCash2);\n        tradePartner.cash -= tradeCash2;\n        tradePartner.cash += Number(tradeCash1);\n\n        trade1.forEach(property => {\n            player.loseProperty(property);\n            tradePartner.gainProperty(property);\n            tilesArr[property.index] = { ...tilesArr[property.index], property };\n        })\n        trade2.forEach(property => {\n            tradePartner.loseProperty(property);\n            player.gainProperty(property);\n            tilesArr[property.index] = { ...tilesArr[property.index], property };\n        })\n\n        setTiles(tilesArr);\n        setAction(null);\n    }\n\n    const displayProperties = (player) => {\n        let propObj = {};\n        player.properties.forEach((tile, i) => {\n            if (tile.buildings === 0 && !tile.mortgaged) {\n                if (propObj[tile.color]) {\n                    propObj[tile.color].push(tile);\n                } else {\n                    propObj[tile.color] = [tile];\n                }\n            }\n        });\n\n        const propertiesStack = Object.values(propObj).sort((a, b) => (a.length < b.length ? 1 : -1));\n\n        return propertiesStack.map((stack, idx) => {\n\n            const stackArr = stack.map((tile, i) => {\n                let styleObj = {border: '1px solid black'};\n                if (trade2.includes(tile) || trade1.includes(tile)) styleObj['border'] = '1px red solid';\n                if (propertiesStack.length === 1) styleObj['marginLeft'] = 0;\n                \n                return <div key={i} className=\"tile\" style={ styleObj } onClick={addToTrade(tile, player)}>\n                            <header className=\"tile-header\" style={{ backgroundColor: tile.color }}>\n                                {tile.name.split(' ').map(el => el.slice(0,3)).join(' ')}\n                            </header>\n                            <div className=\"tile-info\">\n                                <div>Price:${tile.price}</div>\n                                <div>Rent: ${tile.rentAmount()}</div>\n                                <div>House Cost: ${tile.buildingPrice}</div>\n                            </div>\n                       </div>\n            })\n\n            return <div key={idx} className=\"trade-stack\">\n                        {stackArr}\n                    </div>\n            \n        })\n    }\n\n    const displayTrade = () => {\n        if (!tradePartner) return null;\n\n        return <div className=\"trade-panel\">\n                    <div className=\"trade-assets\">\n                        <div className=\"trade-header\">{`${player.name} $${player.cash}`}</div>\n                        <div className=\"trade-properties\">{displayProperties(player)}</div>\n                        <div className=\"trade-cash\">${tradeCash1}<input type=\"range\" value={tradeCash1} min=\"0\" max={player.cash} onChange={(e) => setTradeCash1(e.target.value)}/></div>\n                    </div>\n                    <div className=\"trade-assets\">\n                        {`${tradePartner.name} $${tradePartner.cash}`}\n                        <div className=\"trade-properties\">{displayProperties(tradePartner)}</div>\n                        <div className=\"trade-cash\">${tradeCash2}<input type=\"range\" value={tradeCash2} min=\"0\" max={tradePartner.cash} onChange={(e) => setTradeCash2(e.target.value)}/></div>\n                    </div>\n               </div>\n    }\n    \n    return <div className=\"trade-container\">\n                {displayTradepartners()}\n                {displayTrade()}\n                {tradePartner ? <button onClick={acceptTrade}>Confrim Trade</button> : null}\n           </div>\n}","import React, { useState } from 'react';\n\nexport default function Trade(props) {\n    const [mortgageProperty, setMortgageProperty] = useState();\n    const [buySell, setBuySell] = useState();\n\n    const { player, setMessage, setTiles, tiles } = props;\n\n    const askToMortgage = (tile) => {\n        return () => {\n            setMessage(`Mortgage ${tile.name} for $${tile.price/2}?`);\n            setBuySell('sell')\n            setMortgageProperty(tile);\n        }\n    }\n\n    const unmortgaged= (tile) => {\n        return () => {\n            if (player.cash >= Math.floor(tile.price * 1.1)) {\n                setMessage(`Buy back ${tile.name} for $${Math.floor(tile.price * 1.1)}?`);\n                setBuySell('buy')\n                setMortgageProperty(tile);\n            } else {\n                setMessage(`${player.name} does not have $${Math.floor(tile.price * 1.1)} to buy back ${tile.name}`)\n            }\n        }\n    }\n\n    const getMortgageMoney = () => {\n        if (buySell === 'sell') {\n            setMessage(`${mortgageProperty.name} has been mortgaged`);\n            player.cash += mortgageProperty.price/2;\n            mortgageProperty.mortgaged = true;\n        } else {\n            setMessage(`${mortgageProperty.name} has been bought back`);\n            player.cash -= Math.floor(mortgageProperty.price * 1.1);\n            mortgageProperty.mortgaged = false;\n        }\n\n        setTiles([...tiles]);\n        setMortgageProperty(null);\n    }\n\n    const confirmMortgage = () => {\n        if (!mortgageProperty) return null;\n\n        return <div className=\"mortgage-btns\">\n                    <button onClick={getMortgageMoney}>Yes</button>\n                    <button onClick={() => setMortgageProperty(null)}>No</button>\n               </div>\n    }\n\n    const displayProperties = (player) => {\n        return player.properties.filter(tile => tile.buildings === 0).map((tile, i, stack) => {\n            let styleObj = {border: '1px solid black'};\n            let func = askToMortgage(tile);\n            if (tile.mortgaged) {\n                styleObj['border'] = '1px red solid';\n                func = unmortgaged(tile);\n            }\n            \n            return <div key={i} className=\"tile\" style={ styleObj } onClick={func}>\n                <header className=\"tile-header\" style={{ backgroundColor: tile.color }}>{tile.name.split(' ').map(el => el.slice(0, 3)).join(' ')}</header>\n            </div>\n        })\n    }\n\n    const displayMortgage = () => {\n        return <div className=\"mortgage-properties\">{displayProperties(player)}</div>\n    }\n\n    return <div className=\"mortgage-container\">\n                {confirmMortgage()}\n                {displayMortgage()}\n           </div>\n}","import React, { useState, useEffect } from 'react';\nimport Property from '../tiles/property';\nimport Chance from '../tiles/chance';\nimport Tax from '../tiles/tax';\nimport GoToJail from '../tiles/go_to_jail';\nimport Hand from '../hand/hand';\nimport Trade from './trade';\nimport Mortgage from './mortgage';\n\nexport default function Interface(props) {\n    const [message, setMessage] = useState(null);\n    const [message2, setMessage2] = useState(null);\n    const [action, setAction] = useState(null);\n    const [moved, setMoved] = useState(false);\n    const [tile, setTile] = useState();\n\n    const { player, nextPlayer, roll, setRoll, tiles, setTiles, players, setPlayers, moveToJail, displayPiece, setActivePlayer, setModal } = props;\n    \n    useEffect(() => {\n        if (player.turnsJailed > 0) {\n            const turns =  (player.turnsJailed > 1) ? 'turns' : 'turn';\n            if (player.jailed) setMessage(`${player.name} has been in jail for ${player.turnsJailed} ${turns}`)\n        }\n    \n        if (roll[0] === roll[1] && player.turnsJailed < 1 && roll[0] && !player.jailed) setMessage2(`${player.name} rolled a double, they get to go again!`) \n    }, [setMessage, player, roll])\n\n    const move = (die1 = null, die2 = null) => {\n        return () => {\n            const { tile } = props.move(die1, die2);\n            const tileName = tile.name;\n            const { cash, name } = player;\n            setMoved(true);\n            \n            if (player.doubles >= 3) {\n                player.doubles = 0;\n                setMessage(`${name} has been sent to jail for speeding!`)\n                moveToJail();\n            } else {\n                setTile(tile);\n\n                if (tile instanceof Property) {\n                    if (!tile.owner) {\n                        if (tile.price <= cash) {\n                            setMessage(`Does ${name} want to buy ${tileName} for $${tile.price}?`)\n                            setAction('purchase');\n                        } else {\n                            setMessage(`${name} doesn't have enough to buy ${tileName}`)\n                        }\n                    } else {\n                        if (tile.mortgaged) {\n                            setMessage(`${name} landed on the mortgaged property, ${tileName}`)\n                        } else {\n                            if (tile.owner.name !== name ) {\n                                tile.landed(player);\n                                setMessage(`${name} paid ${tile.owner.name} $${tile.rentAmount()} in rent on ${tileName}`)\n                            } else {\n                                setMessage(`${name} landed on their own property, ${tileName}`)\n                            }\n                        }\n                    }\n                } else if (tile instanceof Chance || tile instanceof Tax) {\n                    tile.landed(player);\n                    setMessage(`${tileName}! ${name} ${tileName === 'Chance' ? 'gets' : 'loses'} $200`)\n                } else if (tile instanceof GoToJail) {\n                    setMessage2(`${name} landed on Go to Jail`);\n                    setMessage(`${name} went to Jail!`);\n                    moveToJail();\n                } else {\n                    setMessage(`${name} landed on ${tileName}`)\n                }\n            }\n            \n            if (player.cash < 0) {\n                setMessage2(`${player.name} ran out of money. Declare bankruptcy or sell property?`)\n                setAction('bankrupt');\n            }\n        }\n    }\n    \n    const endTurn = () => {\n        if (roll[0] !== roll[1] || player.jailed || player.turnsJailed > 0) {\n            nextPlayer();\n        } \n        if (player.turnsJailed > 0 && !player.jailed) player.turnsJailed = 0;\n        if (player.jailed) player.turnsJailed ++;\n        setMoved(false);\n        setMessage(null);\n        setMessage2(null);\n        setRoll([]);\n        setAction(null);\n    }\n\n    const payFine = () => {\n        if (player.cash >= 50) {\n            player.cash -= 50;\n            player.getOutOfJail();\n            setMessage(`${player.name} is out of jail`);\n        } else {\n            setMessage(`${player.name} doesn't have enough to pay the jail fine`);\n\n        }\n    }\n    \n    const rollForJail = () => {\n        let [die1, die2] = player.rollDice();\n        if (die1 === die2) {\n            player.getOutOfJail();\n            move(die1, die2)();\n        } else {\n            if (player.turnsJailed < 3) {\n                setMessage('Not a double');\n                setRoll([die1, die2]);\n                setMoved(true);\n            } else {\n                player.cash -= 50;\n                player.getOutOfJail();\n                move(die1, die2)();\n            }\n        }\n    }\n\n    const displayToolbar = () => {\n        let toolbar;\n        const mortgageBtn = <button onClick={() => {\n                                setAction('mortgage')\n                                setMessage('What would you like to mortgage?');\n                            }}>Mortgage</button>;\n        const tradeBtn = <button onClick={() => {\n                            setAction('trade');\n                            setMessage(`Who do you want to trade with?`)\n                         }}>Trade</button>                   \n        \n        if (player.jailed) {\n            if (player.turnsJailed === 0 || moved) {\n                toolbar = <div>\n                            {mortgageBtn}\n                            {tradeBtn}\n                            <button onClick={endTurn}>End Turn</button>\n                         </div>\n            } else {\n                toolbar = <div>\n                            {mortgageBtn}\n                            {tradeBtn}\n                            <button onClick={payFine}>Pay $50 fine</button>\n                            <button onClick={rollForJail}>Roll</button>\n                         </div>\n            }\n        } else {\n            if (moved) {\n                toolbar = <div>\n                            {mortgageBtn}\n                            {tradeBtn}\n                            {tile instanceof Property && !tile.owner? <button onClick={() => {\n                                if (!tile.owner && tile instanceof Property) {\n                                    if (tile.price <= player.cash) {\n                                        setMessage(`Does ${player.name} want to buy ${tile.name} for $${tile.price}?`)\n                                        setAction('purchase');\n                                    } else {\n                                        setMessage(`${player.name} doesn't have enough to buy ${tile.name}`)\n                                    }\n                                }\n                                }}>Buy Property</button> : null}\n                            {player.cash >= 0 ? <button onClick={endTurn}>End Turn</button> : <button onClick={() => setAction('bankrupt')}>Bankruptcy</button>}\n                          </div>\n            } else {\n                toolbar = <div>\n                            <button onClick={move()}>Move</button>\n                          </div> \n            }\n        }\n\n        return <div className=\"toolbar\">\n                    {toolbar}\n               </div>\n    }\n\n    const purchase = () => {\n        let tilesArr = [...tiles]\n        player.gainProperty(tile)\n        tilesArr[tile.index] = { ...tilesArr[tile.index], tile};\n        player.cash -= tile.price;\n        setTiles(tilesArr);\n        setMessage(`${player.name} now owns ${tile.name}`)\n        setAction(null);\n    }\n\n    const declareBankruptcy = () => {\n        let tilesArr = [...tiles];\n\n        if (tile.owner) {\n            tile.owner.cash += player.cash;\n        }\n\n        player.properties.forEach(property => {\n            property.reset();\n            tilesArr[property.index].tile = property;\n        })\n        \n        if (players.indexOf(player) === players.length -1) setActivePlayer(0);\n        players.splice(players.indexOf(player), 1);\n        delete tilesArr[player.position].players[player.name];\n\n        if (players.length === 1) setModal('end');\n\n        setPlayers(players);\n        setMoved(false);\n        setMessage(null);\n        setMessage2(null);\n        setRoll([]);\n        setAction(null);\n        setTiles(tilesArr);\n    }\n\n    const displayAction = () => {\n        if (!action) return null;\n        let component;\n\n        switch (action) {\n            case 'purchase':\n                component = <div>\n                                <button onClick={purchase}>Yes</button>\n                                <button onClick={() => {\n                                    setAction(null);\n                                    setMessage(null);\n                                    setMessage2(null);\n                                    }}>No</button>\n                            </div>\n                break;\n            case 'trade':\n                component = <Trade \n                                players={players}\n                                player={player}\n                                setAction={setAction}\n                                tiles={tiles}\n                                setTiles={setTiles}\n                                displayPiece={displayPiece}\n                            />\n                break;\n            case 'mortgage':\n                component = <Mortgage \n                                player={player}\n                                setAction={setAction}\n                                setMessage={setMessage}\n                                setTiles={setTiles}\n                                tiles={tiles}\n                            />\n                break;\n            case 'bankrupt':\n                component = <button onClick={declareBankruptcy}>Declare Bankruptcy</button>\n                break;\n            default:\n                break;\n        }\n        return component\n    }\n\n    const setDie = (die) => {\n        switch (die) {\n            case 1:\n                return <i className=\"fas fa-dice-one die\"></i>;\n            case 2:\n                return <i className=\"fas fa-dice-two die\"></i>\n            case 3:\n                return <i className=\"fas fa-dice-three die\"></i>\n            case 4:\n                return <i className=\"fas fa-dice-four die\"></i>\n            case 5:\n                return <i className=\"fas fa-dice-five die\"></i>\n            case 6:\n                return <i className=\"fas fa-dice-six die\"></i>\n            default:\n                break;\n        }\n    }\n\n    const displayRoll = () => {\n        if (roll.length !== 2) return null;\n\n        let [die1, die2] = roll;\n        die1 = setDie(die1);\n        die2 = setDie(die2);\n\n        return <div className=\"dice\">{die1}{die2}</div>\n    }\n\n    return (\n        <div className=\"interface\">\n            <div className=\"player-info\">\n                <div>{player.name}</div>\n                <div>${player.cash}</div>\n                <div>{displayPiece(player)}</div>\n            </div>\n            {displayToolbar()}\n            {displayRoll()}\n            <div className=\"message\">\n                <div>{message2}</div>\n                <div>{message}</div>\n            </div>\n            {displayAction()}\n            <Hand\n                player={player}\n                properties={player.properties}\n                setMessage={setMessage}\n                tiles={tiles}\n                setTiles={setTiles}\n            />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nexport default function Leaderboard(props) {\n    const [playerObj, setPlayerObj] = useState({});\n\n    const { players } = props;\n\n    useEffect(() => {\n        let obj = {...playerObj};\n        players.forEach(player => obj[player.name] = player);\n        setPlayerObj(obj);\n    }, [setPlayerObj])\n\n    const displayRows = () => {\n        let playerArr = Object.values(playerObj).sort((a, b) => \n            a.netWorth() > b.netWorth() ? -1 : 1\n        ).map((player, i) => {\n            const housesCount = player.properties.reduce((acc, property) => {\n                return acc += property.buildings;\n            }, 0);\n\n            return <tr key={i}>\n                <td >{player.name}</td>\n                <td>${player.cash}</td>\n                <td className=\"table-cell\">{player.properties.length}</td>\n                <td className=\"table-cell\">{housesCount}</td>\n                <td>${player.netWorth()}</td>\n            </tr>\n        });\n        return playerArr;\n    }\n\n    return <div className=\"leaderboard\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th className=\"table-header-name\">Name</th>\n                            <th>Cash</th>\n                            <th>Properties</th>\n                            <th>Houses</th>\n                            <th>Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {displayRows()}\n                    </tbody>\n                </table>\n           </div>\n}","import React from 'react';\n\nexport default function End(props) {\n    const { player } = props;\n\n    return <div className=\"end\">\n                {player.name} has won the game!\n           </div>\n}","import React from 'react';\nimport End from './end';\n\nexport default function Modal(props) {\n    const { modal, player, setModal } = props;\n\n    let component;\n\n    switch (modal) {\n        case \"end\":\n            component = <End player={player}/>\n            break;\n        default:\n            return null;\n    }\n\n    if (modal === 'end') {\n        return <div className=\"modal-background\">\n            <div className=\"modal-child\" onClick={e => e.stopPropagation()}>\n                {component}\n            </div>\n        </div>\n    }\n    return <div className=\"modal-background\" onClick={() => setModal(null)}>\n                <div className=\"modal-child\" onClick={e => e.stopPropagation()}>\n                    {component}\n                </div>\n           </div>\n    \n}","import React, { useState, useEffect } from 'react';\nimport Go from '../tiles/go';\nimport Property from '../tiles/property';\nimport Jail from '../tiles/jail';\nimport FreeParking from '../tiles/free_parking';\nimport Tax from '../tiles/tax';\nimport Chance from '../tiles/chance';\nimport GoToJail from '../tiles/go_to_jail';\nimport Interface from '../game/interface';\nimport Leaderboard from './leaderboard';\nimport Modal from '../modal/modal';\n\nexport default function Board(props) {\n  const [tiles, setTiles] = useState([]);\n  const [roll, setRoll] = useState([]);\n  const [displayTile, setDisplayTile] = useState(null);\n  const [pos, setPos] = useState()\n  const [modal, setModal] = useState(null);\n  \n  const { activePlayer, setActivePlayer, players, setPlayers } = props;\n\n  useEffect(() => {\n    const setup = function() {\n      let set = [\n        ['Go'],\n        ['Mediterranean Avenue', 'Brown', 60, 3],\n        ['Chance'],\n        ['Baltic Avenue', 'Brown', 60, 4],\n        ['Income Tax'],\n        ['Oriental Avenue', 'LightBlue', 100, 6],\n        ['Chance'],\n        ['Vermont Avenue', 'LightBlue', 100, 6],\n        ['Connecticut Avenue', 'LightBlue', 120, 8],\n        ['Jail'],\n        ['St. Charles Place', 'Pink', 140, 10],\n        ['Income Tax'],\n        ['States Avenue', 'Pink', 140, 10],\n        ['Virginia Avenue', 'Pink', 160, 12],\n        ['St. James Place', 'Orange', 180, 14],\n        ['Chance'],\n        ['Tennessee Avenue', 'Orange', 180, 14],\n        ['New York Avenue', 'Orange', 200, 16],\n        ['Free Parking'],\n        ['Kentucky Avenue', 'Red', 220, 18],\n        ['Chance'],\n        ['Indiana Avenue', 'Red', 220, 18],\n        ['Illinois Avenue', 'Red', 240, 20],\n        ['Atlantic Avenue', 'Yellow', 260, 22],\n        ['Ventnor Avenue', 'Yellow', 260, 22],\n        ['Income Tax'],\n        ['Marvin Gardens', 'Yellow', 280, 24],\n        ['Go To Jail'],\n        ['Pacific Avenue', 'Green', 300, 26],\n        ['North Carolina Avenue', 'Green', 300, 26],\n        ['Chance'],\n        ['Pennsylvania Avenue', 'Green', 320, 28],\n        ['Chance'],\n        ['Park Place', 'SteelBlue', 350, 35],\n        ['Income Tax'],\n        ['Boardwalk', 'SteelBlue', 400, 45],\n      ];\n\n      setTiles(set.map((property, i) => {\n        let tile;\n  \n        switch (property[0]) {\n          case 'Go':\n            tile = new Go(i, 'Go');\n            break;\n          case 'Chance':\n            tile = new Chance(i, 'Chance');\n            break;\n          case 'Income Tax':\n            tile = new Tax(i, 'Income Tax');\n            break;\n          case 'Jail':\n            tile = new Jail(i, 'Jail');\n            break;\n          case 'Free Parking':\n            tile = new FreeParking(i, 'Free Parking');\n            break;\n          case 'Go To Jail':\n            tile = new GoToJail(i, 'Go To Jail');\n            break;\n          default:\n            tile = new Property(i, property[0], property[1], property[2], property[3]);\n            break;\n        }\n        if (i === 0) {\n          let start = {tile};\n          start['players'] = {};\n          players.forEach(player => {\n            start.players[player.name] = player;\n          })\n          return start;\n        }\n        return {tile, players: {}};\n      }));\n      \n    }\n    setup();\n  }, [players]);\n\n  const move = (die1, die2) => {\n    let player = players[activePlayer];\n    if (!die1 && !die2) [die1, die2] = player.rollDice();\n    let tilesArr = [...tiles];\n    let roll = die1 + die2;\n\n    delete tilesArr[player.position].players[player.name];\n    if (roll + player.position > 35) player.cash += 200;\n    player.position = (roll + player.position) % tiles.length;\n    tilesArr[player.position].players[player.name] = player;\n    setTiles(tilesArr);\n    setRoll([die1, die2]);\n\n    return tilesArr[player.position];\n  }\n  \n  const moveToJail = () => {\n    let player = players[activePlayer];\n    let tilesArr = [...tiles];\n    \n    delete tilesArr[player.position].players[player.name];\n    player.position = 9;\n    tilesArr[player.position].players[player.name] = player;\n    player.sendToJail();\n\n    setTiles(tilesArr);\n  }\n\n  const nextPlayer = () => {\n    setActivePlayer((activePlayer + 1) % players.length);\n  }\n\n  const handleTileHover = (tile) => {\n    return e => {\n      if (tile instanceof Property) {\n        setDisplayTile(tile);\n        let x = e.clientX;\n        let y = e.clientY;\n        const screenWidth = window.innerWidth;\n        const screenHeight = window.innerHeight;\n        const displayTileHeight = 270;\n        const displayTileWidth = 245;\n        const offset = 10;\n\n        // if (x + displayTileWidth > screenWidth) x -= displayTileWidth + offset;\n        // if (y + displayTileHeight > screenHeight) y -= displayTileHeight + offset;\n        if (y + displayTileHeight > screenHeight) {\n          if (x + displayTileWidth > screenWidth) {\n            x -= displayTileWidth + offset;\n          }\n          y -= y + displayTileHeight - screenHeight + offset\n        };\n        if (x + displayTileWidth > screenWidth) {\n          x -= x + displayTileWidth - screenWidth + offset;\n        }\n\n        setPos([x, y + window.scrollY]);\n      }\n    }\n  }\n\n  const displayZoomedTile = () => {\n    if (!displayTile) return null;\n    return <div className=\"tile zoom\" style={{ left: pos[0]+3, top: pos[1]+3 }}>\n            <header className=\"tile-header\" style={{ backgroundColor: displayTile.color }}>{displayTile.name}</header>\n            <div className=\"zoom-price\">{`PRICE $${displayTile.price}`}</div>\n            <div className=\"zoom-rent\">{`RENT $${displayTile.rent}`}</div>\n            <div className=\"house-desc-container\">\n              <div className=\"house-desc\">\n                <div>With 1 House</div><div>${displayTile.rentAmount(1, true)}</div>\n              </div>\n              <div className=\"house-desc\">\n                <div>With 2 Houses</div><div>${displayTile.rentAmount(2, true)}</div>\n              </div>\n              <div className=\"house-desc\">\n                <div>With 3 Houses</div><div>${displayTile.rentAmount(3, true)}</div>\n              </div>\n              <div className=\"house-desc\">\n                <div>With 4 Houses</div><div>${displayTile.rentAmount(4, true)}</div>\n              </div>\n            </div>\n            <div className=\"additional-info\">\n              <div>Mortgage Value ${displayTile.price/2}</div>\n              <div>House Cost ${displayTile.buildingPrice} Each</div>\n            </div>\n            <div className=\"fine-info\">\n              If a player owns all the lots of any Color-Group, the rent is doubled on unimproved lots in that group.\n            </div>\n          </div>\n  }\n\n  const displayHouses = (property) => {\n    if (!property.buildings) return null;\n    let buildingArr = [];\n\n    for (let i = 0; i < property.buildings; i++) {\n      buildingArr.push(<i key={i} className=\"fas fa-home\"></i>)\n    }\n    return <div className=\"tile-houses\">\n              <div>{buildingArr.slice(0,2)}</div>\n              <div>{buildingArr.slice(2)}</div>\n           </div>\n  }\n\n  const displayPiece = (player, mini=false, idx=0) => {\n    if (!player) return null;\n\n    let figure;\n    let addClass = '';\n\n    if (player.jailed && !mini) {\n      addClass += \" gray\";\n    }\n\n    if (mini) {\n      addClass += \" mini\"\n    }\n\n    switch (player.piece) {\n      case 'Horse':\n        figure = <i key={idx} className={\"fas fa-horse\" + (addClass ? addClass : '')}></i>;\n        break;\n      case 'Bicycle':\n        figure = <i key={idx} className={\"fas fa-bicycle\" + (addClass ? addClass : '')}></i>;\n        break;\n      case 'Dog':\n        figure = <i key={idx} className={\"fas fa-dog\" + (addClass ? addClass : '')}></i>\n        break;\n      case 'Car':\n        figure = <i key={idx} className={\"fas fa-car\" + (addClass ? addClass : '')}></i>\n        break;\n      case 'Ship':\n        figure = <i key={idx} className={\"fas fa-ship\" + (addClass ? addClass : '')}></i>\n        break;\n      case 'Cat':\n        figure = <i key={idx} className={\"fas fa-cat\" + (addClass ? addClass : '')}></i>\n        break;\n      default:\n        break;\n    }\n    return figure;\n  }\n\n  let board = tiles.map((tileObj, i) => {\n    let { tile } = tileObj;\n    let playerArr = Object.values(tileObj.players);\n    if (playerArr.length > 0) {\n      playerArr = playerArr.map((player, idx) => displayPiece(player, false, idx))\n    }\n\n    let color = tile.color || '#CEE6D0';\n\n    return <div key={i} className=\"tile\" style={{ backgroundImage: '../../ assets / images / go_to_jail.png' }} onMouseMove={handleTileHover(tile)} onMouseLeave={() => setDisplayTile(null)}>\n              <header className=\"tile-header\" style={{ backgroundColor: color }}>{tile.name}{displayPiece(tile.owner, true)}</header>\n              <div className=\"tile-players\">\n                {playerArr}\n              </div>\n              <div className=\"tile-price\">{tile.price ? `$${tile.price}` : null}</div>\n              {displayHouses(tile)}\n           </div>\n  });\n\n  return <div className=\"board-container\">\n          <Interface\n            move={move}\n            setActivePlayer={setActivePlayer}\n            player={players[activePlayer]}\n            players={players}\n            setPlayers={setPlayers}\n            nextPlayer={nextPlayer}\n            roll={roll}\n            setRoll={setRoll}\n            tiles={tiles}\n            setTiles={setTiles}\n            moveToJail={moveToJail}\n            displayPiece={displayPiece}\n            setModal={setModal}\n          />\n          <div className=\"board\">\n            <div className=\"row\">{board.slice(0,10)}</div>\n            <div className=\"row top\">\n              {board.slice(35, 36)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(10, 11)} \n            </div>\n            <div className=\"row\">\n              {board.slice(34, 35)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(11, 12)}\n            </div>\n            <div className=\"row\">\n              {board.slice(33, 34)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(12, 13)}\n            </div>\n            <div className=\"row\">\n              {board.slice(32, 33)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(13, 14)}\n            </div>\n            <div className=\"row\">\n              {board.slice(31, 32)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(14, 15)}\n            </div>\n            <div className=\"row\">\n              {board.slice(30, 31)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(15, 16)}\n            </div>\n            <div className=\"row\">\n              {board.slice(29, 30)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(16, 17)}\n            </div>\n            <div className=\"row bottom\">\n              {board.slice(28, 29)}\n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div>  \n              <div className=\"tile mid\">\n                <header className=\"tile-header\"></header>\n                <div className=\"tile-players\">\n                </div>  \n              </div> \n              {board.slice(17, 18)}\n            </div>\n            <div className=\"row\">\n                {board.slice(18,28).reverse()}\n            </div>\n          </div>\n          {displayZoomedTile()}\n          <Modal\n            player={players[activePlayer]}\n            modal={modal}\n            setModal={setModal}\n          />\n          <Leaderboard\n            players={players}\n          />\n        </div>\n}","import React, { useState, useEffect } from 'react';\nimport Board from '../board/board';\n\nexport default function Game(props) {\n    const [activePlayer, setActivePlayer] = useState(0);\n    \n    const { players, setPlayers } = props;\n\n    useEffect(() => {\n        window.onbeforeunload = function () {\n            return 'You really want to go ahead?';\n        }\n    }, []);\n\n    return players.length <= 0 ? null : (\n        <div>\n            <Board \n                activePlayer={activePlayer}\n                setPlayers={setPlayers}\n                setActivePlayer={setActivePlayer}\n                players={players}\n            />\n        </div>\n    )\n}","export default class Player {\n  constructor(name, piece) {\n    this.cash = 1500;\n    this.position = 0;\n    this.properties = [];\n    this.doubles = 0;\n    this.piece = piece;\n    this.name = name;\n    this.jailed = false;\n    this.turnsJailed = 0;\n  }\n\n  sendToJail() {\n    this.jailed = true;\n  }\n\n  getOutOfJail() {\n    this.jailed = false;\n  }\n\n  gainProperty(property) {\n    this.properties.push(property);\n    this.properties.sort((a,b) => a.color > b.color ? 1 : -1);\n    property.buy(this);\n  }\n\n  loseProperty(property) {\n    this.properties.splice(this.properties.indexOf(property), 1);\n  }\n\n  rollDice() {\n    let die1 = Math.floor(Math.random() * 6 ) + 1;\n    let die2 = Math.floor(Math.random() * 6 ) + 1;\n    if (die1 === die2 && !this.jailed) {\n      this.doubles += 1;\n    } else {\n      this.doubles = 0;\n    }\n    \n    return [die1, die2];\n  }\n\n  netWorth() {\n    const assetTotal = this.properties.reduce((acc, property) => {\n      return acc += property.buildingPrice * property.buildings + property.price;\n    }, 0);\n\n    return assetTotal + this.cash;\n  }\n}","import React, { useState } from 'react';\nimport Game from '../game/game';\nimport Player from '../player/player';\n\nexport default function StartMenu() {\n    const [start, setStart] = useState(false);\n    const [name, setName] = useState('');\n    const [pieces, setPieces] = useState(['horse', 'bicycle', 'dog', 'car', 'ship', 'cat'])\n    const [character, setCharacter] = useState();\n    const [players, setPlayers] = useState([]);\n\n    const startGame = () => {\n        if (!start) return null;\n        return <Game\n                    players={players}\n                    setPlayers={setPlayers}\n               />\n    }\n\n    const displayPieces = () => {\n        let pieceArr = [];\n            pieces.forEach((piece, i) => {\n                let color = {color: 'grey'}\n                if (piece === character) color = {color: 'white'};\n                pieceArr.push(\n                    <i key={i} style={color} className={`fas fa-${piece}`} onClick={() => setCharacter(piece)}></i>\n                )\n            })\n        return <div className=\"piece-container\">\n                {pieceArr}\n               </div>\n    }\n\n    const createPlayer = (e) => {\n        e.preventDefault();\n        players.push(new Player(name, character[0].toUpperCase()+character.slice(1)));\n        let pieceArr = [...pieces];\n        pieceArr.splice(pieces.indexOf(character), 1);\n        setPieces(pieceArr);\n        setCharacter();\n        setName('');\n    }\n\n    const displayPlayers = () => {\n        if (players.length === 0) return null;\n\n        return players.map((player, i) => (\n            <div className=\"piece-container\" key={i}>\n                {player.name}\n                <i className={`fas fa-${player.piece.toLowerCase()}`}></i>\n            </div>\n        ))\n    }\n\n    const menu = () => {\n        if (start) return null;\n        let style = {}\n\n        return <div className=\"start-menu\">\n                    <form className=\"create-form\" onSubmit={createPlayer}>\n                        <label>Player Name:</label>\n                        <input type=\"text\" value={name} onChange={(e) => setName(e.currentTarget.value)}/>\n                        <label>Choose A Piece:</label>\n                        {displayPieces()}\n                        <input type=\"submit\" disabled={!name || !character} value=\"Add Player\"/>\n                    </form>\n                    {displayPlayers()}\n                    <button style={style} disabled={players.length <= 1} onClick={() => { setStart(true) }}>Start Game</button>\n               </div>\n    }\n\n    return <div className=\"options\">\n                {menu()}\n                {startGame()}\n                <div className=\"small-screen\">A bigger screen is needed to play</div>\n           </div>\n}","import React from 'react';\nimport './App.css';\nimport StartMenu from './components/startMenu/start_menu';\n\nfunction App() {\n  return (\n    <StartMenu />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}